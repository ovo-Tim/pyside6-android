Qt for Python 6.1.0 is a minor release.

For more details, refer to the online documentation included in this
distribution. The documentation is also available online:

https://doc.qt.io/qtforpython/

Some of the changes listed in this file include issue tracking numbers
corresponding to tasks in the Qt Bug Tracker:

https://bugreports.qt.io/

Each of these identifiers can be entered in the bug tracker to obtain more
information about a particular change.

****************************************************************************
*                                  PySide6                                 *
****************************************************************************

 * QtOpenGLFunctions have been moved into QtOpenGL.
 * Examples habe been improve: brush up, use snake_case, add new ones, etc
 - [PYSIDE-535]  PyPy-compatibility was improved by: Avoid the
                 __builtins__ quirk and import builtins, instead
 - [PYSIDE-1019] Confusing import error messages causes by feature-import
                 have been fixed.
 - [PYSIDE-1425] The broken encoding of QCoreApplication.arguments() on
                 Windows has been fixed.
 - [PYSIDE-1455] Bindings for the Qt Designer libraries have been added
 - [PYSIDE-1455] A Qt Designer plugin has been added, allowing for creating
                 custom widgets in Python. (Experimental Support)
 - [PYSIDE-1482] Active Qt, QtCharts, QtDataVisualization and QStateMachine
                 have been re-added. The namespaces from QtCharts and
                 QtDataVisualization have been removed.
 - [PYSIDE-1503] Overloads using numpy-arrays of x,y data have
                 been added to functions taking lists of QPointF.
                 (Experimental support depending on option
                 --pyside-numpy-support to setup.py)
 - [PYSIDE-1520] Implicit C++ conversions generated by shiboken are now
                 reflected as typing.Union[].
 - [PYSIDE-1523] Nuitka: Allow for compiled functions and methods, too.

****************************************************************************
*                                  Shiboken6                               *
****************************************************************************

 - [PYSIDE-504]  --avoid-protected-hack can now be used with gcc, clang
                 as well.
 - [PYSIDE-1338] Add option to use global headers
 - [PYSIDE-1477] clang options can now be specified using command line
                 options or project files, allowing for cross-compiling.
